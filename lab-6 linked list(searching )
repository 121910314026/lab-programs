class Node(object):
    def __init__(self, value: int, next_node: "Node" = None):
        self.value = value
        self.next_node = next_node

    def __repr__(self):
        return "Node <{}>".format(self.value)


def find(head: Node, value: int) -> bool:
    """Returns True if value in linked list, otherwise False."""

    current_node = head
    while current_node is not None:
        if current_node.value == value:
            return True

        current_node = current_node.next_node

    return False


if __name__ == '__main__':
    linked_list = Node(1, Node(2, Node(3, Node(4, Node(5)))))
    for i in range(1, 6):
        assert(find(linked_list, i))
    assert(not find(linked_list, 7))
